openapi: 3.0.2
info:
  description: University of Arizona Concept Alignment API
  title: linking
  version: 1.1.0
servers:
  - url: http://linking.cs.arizona.edu
    description: University of Arizona linking server
  - url: http://localhost:9001
    description: Local host running the webapp

components:
  schemas:
    statusResponse:
      type: object
      properties:
        searcher:
          type: object
          properties:
            index:
              description: an autoincrementing number
              type: number
              format: int32
              example: 1
            status:
              type: object
              properties:
                number:
                  description: a numeric value for computers
                  type: number
                  format: int32
                  example: 0
                text:
                  description: a textual value for humans
                  type: string
                  example: waiting
        indexer:
          index:
          type: object
          properties:
            index:
              description: an autoincrementing number
              type: number
              format: int32
              example: 2
            status:
              type: object
              properties:
                number:
                  description: a numeric value for computers
                  type: number
                  format: int32
                  example: 0
                text:
                  description: a textual value for humans
                  type: string
                  example: idling
    searchResponse:
      type: array
      items:
        type: object
        properties:
          score:
            description: a value in the range [-1, 1] with higher being a better match for the search
            type: number
            format: float
          datamartId:
            description: an indication of the source of the data to distinguish clashing datasetIds from different sources.  Together the datamartId, datasetId, and variableId should form a GUID.
            type: string
          datasetId:
            description: a unique identifer for the dataset of a particular datamart
            type: string
          variableId:
            description: a unique identifier for a variable of a particular dataset
            type: string
          variableName:
            description: a more human readable version of the variableId
            type: string
          variableDescription:
            description: an more thorough explanation of the variable
            type: string
    bulkSearchOntologyToDatamart:
      type: array
      items:
        type: object
        properties:
          ontology:
            description: the name of the ontology node
            type: string
          datamarts:
            description: score and datamart ID of all matches
            type: array
            items:
              type: object
              properties:
                score:
                  description: a value in the range [-1, 1] with higher being a better match for the search
                  type: number
                  format: float
                datamart:
                  description: datamart ID of match
                  type: object
                  properties:
                    datamartId:
                      description: an indication of the source of the data to distinguish clashing datasetIds from different sources.  Together the datamartId, datasetId, and variableId should form a GUID.
                      type: string
                    datasetId:
                      description: a unique identifer for the dataset of a particular datamart
                      type: string
                    variableId:
                      description: a unique identifier for a variable of a particular dataset
                      type: string
    bulkSearchDatamartToOntology:
      type: array
      items:
        type: object
        properties:
          datamart:
            description: the ID of the datamart
            type: object
            properties:
              datamartId:
                description: an indication of the source of the data to distinguish clashing datasetIds from different sources.  Together the datamartId, datasetId, and variableId should form a GUID.
                type: string
              datasetId:
                description: a unique identifer for the dataset of a particular datamart
                type: string
              variableId:
                description: a unique identifier for a variable of a particular dataset
                type: string
          ontologies:
            description: score and ontology node of all matches
            type: array
            items:
              type: object
              properties:
                score:
                  description: a value in the range [-1, 1] with higher being a better match for the search
                  type: number
                  format: float
                ontology:
                  description: the name of the ontology node
                  type: string

paths:
  /v1/ping:
    get:
      summary: Respond with OK
      responses:
        200:
          description: OK

  /v1/echo:
    get:
      summary: Echo back the input text
      parameters:
        - name: text
          in: query
          description: text that should be echoed back
          required: true
          schema:
            type: string
          example: Kilroy was here.
      responses:
        200:
          description: A copy of the input
          content:
            'text/plain; charset=utf-8':
              schema:
                type: string

  /v1/status:
    get:
      summary: Report the status (busy or ready)
      responses:
        200:
          description: Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /v1/search:
    get:
      summary: Perform the concept alignment
      description: "The query term is converted to vectors, the nearest matches from the datamart are found, and then they are returned with descriptions."
      parameters:
        - name: query
          in: query
          description: a query by example
          required: true
          schema:
            type: string
          example: corn
        - name: maxHits
          in: query
          description: maximum number of matches to return
          required: false
          schema:
            type: integer
            format: int32
            default: 10
          example: 20
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/searchResponse"
        500:
          description: The searcher is not working correctly.

  /v1/bulkSearchOntologyToDatamart:
    get:
      summary: For each item in the ontology, find the best matches in the datamarts
      description: ""
      parameters:
        - name: secret
          in: query
          description: the secret that allows access to this operation
          required: true
          schema:
            type: string
          example: secret
        - name: maxHits
          in: query
          description: maximum number of matches to return per ontology
          required: false
          schema:
            type: integer
            format: int32
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bulkSearchOntologyToDatamart"
        500:
          description: The searcher is not working correctly.

  /v1/bulkSearchDatamartToOntology:
    get:
      summary: For each item in the datamarts, find the best matches in the ontology
      description: ""
      parameters:
        - name: secret
          in: query
          description: the secret that allows access to this operation
          required: true
          schema:
            type: string
          example: secret
        - name: maxHits
          in: query
          description: maximum number of matches to return per datamart
          required: false
          schema:
            type: integer
            format: int32
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bulkSearchDatamartToOntology"
        500:
          description: The searcher is not working correctly.

  /v1/reindex:
    put:
      summary: Scrape and reindex the ISI datamarts and SuperMaaS
      description: "All the data will be downloaded to a new directory and then reindexed.  Searches conducted after the index is complete will run on the new index."
      parameters:
        - name: secret
          in: query
          description: the secret that allows access to this operation
          required: true
          schema:
            type: string
          example: secret
      responses:
        201:
          description: The new index is being created.
        401:
          description: The request is not authorized by the secret.
        500:
          description: The indexer is not working correctly.
        503:
          description: The indexer is busy loading or indexing.
