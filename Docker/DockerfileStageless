# Use a command like this from the Docker directory to build the image.
# docker build -t conceptalignment --env supermaas="<supermass_url>" -f DockerfileStage .
# Add a few environment variables when starting up the container.
# docker run --env secret="<secret>" --env supermaas="<supermass_url>" <image>
# To disable scraping of supermaas, set supermaas= so that the value is the empty string.

FROM ubuntu:16.04

# Install base packages
RUN apt-get update && apt-get install -y \
    vim

# Install Java
RUN apt-get update
RUN apt-get -y install openjdk-8-jdk

# Copy files to the image for runProd configuration
WORKDIR /home/conceptalignment-project/conceptalignment
RUN mkdir ./webapp
RUN mkdir ./webapp/target
RUN mkdir ./webapp/target/universal
COPY stage ./webapp/target/universal/stage
COPY index_0 ./webapp/target/universal/index_0
COPY index_1 ./webapp/target/universal/index_1
COPY credentials ./webapp/target/universal/credentials
COPY hnswlib-glove.idx ./webapp/target/universal
COPY hnswlib-wm_flattened.idx ./webapp/target/universal
COPY hnswlib-concept.idx ./webapp/target/universal
COPY hnswlib-process.idx ./webapp/target/universal
COPY hnswlib-property.idx ./webapp/target/universal

# Prepare runtime environment
ENV _JAVA_OPTIONS "-Xmx16g -Xms12g -Dfile.encoding=UTF-8"
RUN echo "export _JAVA_OPTIONS=\"-Xmx16g -Xms12g -Dfile.encoding=UTF-8\"" >> /root/.bashrc

# Configure the webapp
# Override the secret with an environment variable instead.
# WORKDIR /home/conceptalignment-project/conceptalignment/webapp/target/universal/stage/conf
# ARG secret
# RUN sed -i "s/changeme/${secret}/" application.conf

# Prepare to run the image
WORKDIR /home/conceptalignment-project/conceptalignment/webapp/target/universal/stage
EXPOSE 9001
CMD ["bin/webapp", "-Dhttp.port=9001"]
